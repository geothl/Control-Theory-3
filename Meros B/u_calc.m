function u = u_calc(x,r,ye,ip,ipm,a1,b1,a2,b2) 


KP=a1*ip+b1*ye*transpose(x);
KPM=a2*ipm+b2*ye*transpose(r);
u=-KP*x+KPM*r;
end



%ignore:εμειναν απο τα διαφορα τεστ
% a=-80*[1 0 0 1;1 0 0 1;]; good for qd1
% b=-40*[1 0 0 1;0 0 0 1;];

% a=-80*[1 0 0 -1;1 0 0 1;]; somewhat good for both
% b=-40*[1 0 0 -1;0 0 0 1;];



%ok very good for q1
% a1=-80*[1 0 0 1;1 0 0 1;];
% b1=-40*[1 0 0 1;0 0 0 1;];
% a2=8000*[1 0 0 1;1 0 0 1;];
% b2=4000*[1 0 0 1;0 0 0 1;];



%the best
% a1=-800*[1 0 0 1;1 0 0 1;];
% b1=-200*[1 0 0 1;0 0 0 1;];
% a2=12000*[1 -1 1 1;1 0 0 1;];
% b2=26000*[1 -1 1 1;1 0 0 1;];


% a1=-800*[1 0 0 1;1 0 0 1;];
% b1=-200*[1 0 0 1;0 0 0 1;];
% a1=-240*[1 0 1 0;0 1 0 1;];
% b1=-260*[0 0 1 0;0 0 0 1;];
% a2=200*[0 0 1 0;0 0 0 1;];
% b2=500*[0 0 1 0;0 0 0 1;];

% 
% a1=-800*[1 0 0 1;1 0 0 1;];
% b1=-200*[1 0 0 1;0 0 0 1;];
% a2=12000*[1 -1 1 1;1 0 0 1;];
% b2=26000*[1 -1 1 1;1 0 0 1;];